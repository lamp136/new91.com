<?php
namespace back\basic\controller;
use think\Controller;
use back\extra\controller\Base;
use think\Request;
use think\Db;
use think\Paginator;
use common\phpmailer\ClassPhpMailer;

	
class Email extends Base
{
 	/*
     * 乐融留言邮件列表
     * return void;
     */
    public function lrMessageEmailList(){
    	$data = input('get.');
        $condition = array_search('91乐融留言',config('email_msg'));
        $where['type'] = $condition;
        $pageSize = Config('page_size');
        $list = Db::name('EmailLog')->where($where)->order('id DESC')->paginate($pageSize,false,['query'=>$data]);
        //分页
        $page = $list->render();
        $this->assign('list',$list);
        $this->assign('page',$page);
       	return $this->fetch();
    }
     /*
     * 陵园合作申请邮件列表
     * return void;
     */
    public function cemHezuoEmailList(){
    	$data = input('get.');
        $condition = array_search('陵园合作申请',config('email_msg'));
        $where['type'] = $condition;
        $pageSize = Config('page_size');
        $list = Db::name('EmailLog')->where($where)->order('id DESC')->paginate($pageSize,false,['query'=>$data]);
        //分页
        $page = $list->render();
        $this->assign('list',$list);
        $this->assign('page',$page);
       	return $this->fetch();
    }
    /*
     * 预约看墓邮件列表
     * return void;
     */
    public function appiontEmailList(){
    	$data = input('get.');

        $condition = array_search('预约看墓',config('email_msg'));
        $where['type'] = $condition;
        $pageSize = Config('page_size');
        $list = Db::name('EmailLog')->where($where)->order('id DESC')->paginate($pageSize,false,['query'=>$data]);
        //分页
        $page = $list->render();
        $this->assign('list',$list);
        $this->assign('page',$page);
       	return $this->fetch();
    }
    /*
     * 公共邮件列表
     */
    public function _sendList($condition){
       

    }
    
    
    
    
    /*
     * 发送邮件
     * return string(json);
     */
    public function sendMail(){
        $result = array('flag'=>0,'msg'=>'发送失败！');
        $id = input('id');
        if(!empty($id)){
            $emailLogModel = Db::name('EmailLog');
            $data = $emailLogModel->field('email_address,title,content')->find($id);
            if(!empty($data)){
            	$istrue = $this->sendMailtocustomer($data['email_address'],$data['title'],$data['content']);
                if($istrue){
                    $updata['status'] = 1;
                    $updata['send_time'] = date('Y-m-d H:i:s');
                    if($emailLogModel->where('id ='.$id)->update($updata)){
                        $result = array('flag'=>1,'msg'=>'成功发送！');
                    }
                }
            }
        }
        echo json_encode($result);
    }



    /*
 * 邮件发送函数
 * @input $to|邮箱地址（群发为数组）;
 * @input $subject|邮件标题;
 * @input $content|邮件内容;
 * @return boolean;
 */

public function sendMailtocustomer($to, $subject, $content) {
    $mail = new ClassPhpMailer();
    // 装配邮件服务器
    if (config('mail_smtp')) {
        $mail->IsSMTP();
    }
    $mail->Host = config('mail_host');
    $mail->SMTPAuth = config('mail_smtpauth');
    $mail->Username = config('mail_username');
    $mail->Password = config('mail_password');
    $mail->CharSet = config('mail_charset');
    // 装配邮件头信息
    $mail->From = config('mail_username');
        //判断是否为群以邮件
        if(is_array($to)){
            $to_num = count($to);
            for($i=0;$i<$to_num;$i++){
                $mail->AddAddress($to[$i]);
            }
        }else{
            $mail->AddAddress($to);
        }
    $mail->FromName = config('mail_fromname');
    $mail->IsHTML(config('mail_ishtml'));
    // 装配邮件正文信息
    $mail->Subject = $subject;
    $mail->Body = $content;
    // 发送邮件
    if (!$mail->Send()) {
        return false;
    } else {
        return true;
    }
}

}