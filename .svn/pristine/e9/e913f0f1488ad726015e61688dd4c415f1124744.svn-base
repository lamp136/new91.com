<?php
namespace web\help\controller;
use think\Controller;
use think\Db;
use web\extra\controller\Base;

/**
 * 帮助中心
 * author
 */
class Help extends Base{ 
	
	/*
     * 关于我们
     */
    public function aboutus(){
        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
        return $this->fetch();
    } 
	
    /*
     * 联系我们
     */
    public function contactus(){
        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
        return $this->fetch();
    }

    /**
     * 服务流程
     */
    public function serviceprocess(){
        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
    	return $this->fetch();
    }

    /**
     * 购墓流程
     */
    public function tombprocess(){
        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
        return $this->fetch();
    }

    /**
     * 隐私条款
     */
    
    public function privacy(){
        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
    	return $this->fetch();
    }
    /**
     * 版权声明
     */
    public function copyright(){
        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
        return $this->fetch();
    }
    
    /**
     * 免责条款
     */
    public function disclaimer(){
        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
        return $this->fetch();
    }
    
    /**
     * 法律声明
     */
    public function law(){
        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
        return $this->fetch();
    }
    
    /**
     * 公墓年限
     */
    public function tombagelimit(){
        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
    	return $this->fetch();
    }
    /**
     * 购墓须知
     */
    public function tombnotes(){
        $where['category_id'] = config('article_laws_regulations');
        $where['status'] = config('normal_status');
        $field = 'id,title,thumb_url,summary,published_time,source,hits';
        $list = Db::name('news')->where($where)->field($field)->order('published_time desc')->paginate(config('page_size'));

        $page = $list->render();

        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
        $this->assign('page',$page);
        $this->assign('list',$list);
    	return $this->fetch();
    }

    /**
     * 购墓须知详情
     */
    public function tombnotesDetails(){
        $id = input('id');
        if($id){
            $field = 'id,title,content';
            $data = Db::name('news')->where('id',$id)->field($field)->find();
            $this->assign('data',$data);
        }
        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
        return $this->fetch('tombnotesdetails');
    }
    /**
     * 落葬讲究
     */
    public function wasburied(){
        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
    	return $this->fetch();
    }

    /**
     * 安葬吉日
     */
    public function bury(){
        $get = input('get.');
        $month = date('m');
        $day = date('d');
        $year = date('Y');
        $arrDay = '';

        if(!empty($get['day'])){
            $day = $get['day'];
        }
        
        if(!empty($get['month'])){
            $month = $get['month'];
            $year =  $get['year'];
        }

        if(!empty($get['yiji'])){
            //带搜索条件
            $where[$get['yiji']] = array('like',"%".$get['explain']."%");
            $where['year'] = $year;
            $where['month'] = $month;
            $list = '';
            $array = Db::name('burial_day')->where($where)->select();
            if($array){
                foreach ($array as $key => $value) {
                    $arrDay[] = $value['day'];
                }
                $list = $array[0];
                $day = $array[0]['day'];
            }
            $this->assign('yiji',$get['yiji']);
            $this->assign('explain',$get['explain']);

        }else{
            //没有搜索条件查找数据库
            $where['year'] = $year;
            $where['month'] = $month;
            $where['day'] = $day;
            $list = Db::name('burial_day')->where($where)->find();
            $arrDay = $day;
        }

        if(!empty($list['suitabl'])){
            $list['suitabl'] = explode(',',$list['suitabl']);
            $list['avoid'] = explode(',',$list['avoid']);
        }


        $count =date("t",strtotime($year."-".$month))+1;  //一个月有多少天
       
        $firstDay = date("w", strtotime(date($year."-".$month."-1"))); //一个月中第一天是周几
        $week = date("w", strtotime(date($year."-".$month."-".$day))); //当前天为周几

        //计算每一天农历
        for($i=1;$i<$count;$i++){
            if($i<10){
                $i = '0'.$i;
            }
            $countDay[$i] = nongli($year.$month.$i)['day'];
        }
        //当前天农历日期
        $currnetNoli = nongli($year.$month.$day)['monthDay'];

        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
        $this->assign('list',$list);
        $this->assign('countDay',$countDay);
        $this->assign('firstDay',$firstDay);
        $this->assign('week',$week);
        $this->assign('year',$year);
        $this->assign('day',$day);
        $this->assign('month',$month);
        $this->assign('currnetNoli',$currnetNoli);
        $this->assign('arrDay',$arrDay);

    	return $this->fetch();
    }

    /**
     * 获取宜忌的数据
     */
    public function getyiji(){
        $id = input('id');
        $res = array('flag'=>0,'data'=>'');
        if($id !== 0){
            $data = config('suitabl_avoid')[$id];
            $res = array('flag'=>1,'data'=>$data);
        }

        echo json_encode($res);
    }



    /**
     * 碑文大全列表
     */
    public function epigraphic(){
        $category = config('epitaph_category');
        $li = '0,6';
        foreach ($category as $key => $value) {
            $list[$key] = $this->_epicommon($key,$li);
        }

        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
        $this->assign('list',$list);
    	return $this->fetch();
    }

    /**
     * 碑文大全详情
     */
    public function epicdetail(){
        $category = input('category');
        $li = '';
        $data = $this->_epicommon($category,$li);

        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
        $this->assign('data',$data);
        $this->assign('category',$category);
        return $this->fetch();
    }

    /**
     * 碑文大全公共方法
     * @param  $category 碑文分类
     * @return $list [array]   
     */
    public function _epicommon($category,$li){

        $list = Db::name('epitaph')->where('category',$category)->limit($li)->order('created_time desc')->select();
        //获取相关文章
        $field = 'id,title,thumb_url';
        $bscs = $this->article(config('article_sense'),7,$field);
        $this->assign('bscs',$bscs);
        return $list;
    }

    /**
     * 历史上的今天
     */
    public function history(){

        $time = input('get.');
        $where['month'] = date('m');
        $where['day'] = date('d');
        
        if(!empty($time)){
            $where['month'] = $time['month'];
            $where['day'] = $time['day'];
            $where['day'] = $time['day'] < 10 ? '0'.$time['day'] : $time['day'] ;
           
        }
        $year = date('Y');
        $this->calendar($where['month'],$where['day']);
        
        //查询数据
        $res = $this->commonSelect($where,$year);
      
        $countNum = Db::name('today_history')->where($where)->count();

        //seo
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
        $this->assign('countNum',$countNum);
        $this->assign('month',$where['month']);
        $this->assign('day',$where['day']);
        $this->assign('list',$res['list']);
        $this->assign('tagYear',$res['tagYear']);
    	return $this->fetch();
    }

    //点击加载更多历史今天
    public function historyMore(){
        $year = input('year');
        $where['month'] = input('month');
        $where['day'] = input('day');

        $res = $this->commonSelect($where,$year);

        $array = array('flag'=>0,'data'=>'');
        if(!empty($res['list'])){
            $array = array('flag'=>1,'data'=>$res['list'],'tagYear'=>$res['tagYear']);
        }

        echo json_encode($array);

    }

    /**
     * 查询历史今天数据公共方法
     * @param  [array] $where [搜索条件]
     * @param  [string|int] $year  [查询的年份]
     * @return [array]      
     */
    public function commonSelect($where,$year){
    
        $tagYear = $this->getCount($where,$year);
        $where['year'] = array(array('egt',$tagYear),array('lt',$year));
        $data = Db::name('today_history')->where($where)->field('id,year,title')->order('year desc')->select();
        
        $j = 0;
        $list = array();
        foreach ($data as $key => $value) {
            $list[$data[$key]['year']][] = $value;

            if(count($list[$data[$key]['year']])==1){
                $list[$data[$key]['year']]['tag'] = ++$j;
            }
        }
        $result = array('list'=>$list,'tagYear'=>$tagYear);
        return $result;
    }

    /**
     * 检测数据历史今天
     * @param  [array] $where [搜索条件]
     * @param  [string|int] $year  [当前年]
     * @return [int]        
     */
    public function getCount($where, $year) {
        $tagYear = $year - 10;
        $where['year'] = array(array('egt',$tagYear),array('lt',$year));
        $count = Db::name('today_history')->where($where)->field('id')->count();
        if($count == 0){
            if($tagYear > 0){
                $tagYear = $this->getCount($where,$tagYear);
            }
        }
        return $tagYear;
    }

    /**
     * 历史上的今天详情
     */
    public function historyDetails(){
        $id = input('id');
        $data = Db::name('today_history')->where('id',$id)->find();
        if(!empty($data)){

            if($data['day'] < 10){
                $data['day'] = '0'.$data['day'];
            }
            if($data['month'] < 10){
                $data['month'] = '0'.$data['month'];
            }
            
            $this->calendar($data['month'],$data['day']);

            //最新资讯
            $field = 'id,title,thumb_url';
            $zx = $this->article(config('article_industry_information'),5,$field);

            //热门文章
            $hotWhere['status'] = config('normal_status');
            $hotWhere['is_hot'] = config('normal_status');
            $hotNews = Db::name('news')->where($hotWhere)->field('id,title')->order('published_time desc')->limit(0,6)->select();
            // var_dump($hotNews);die;

            //seo
            $seo = $this->getseo(config('seo_type.cemetery_home'));

            $this->assign('zx',$zx);
            $this->assign('hotNews',$hotNews);
            $this->assign('seo',$seo);
            $this->assign('data',$data);
            $this->assign('month',$data['month']);
            $this->assign('day',$data['day']);
            return $this->fetch('historydetails');
        } 
    }

    /**
     * 制作日历的方法
     * @param  [int] $month [月]
     * @param  [int] $day   [日]
     * @return [type]    
     */
    public function calendar($month,$day){
        $year = date('Y');
        $countDay =date("t",strtotime($year."-".$month))+1;  //一个月有多少天
       
        $firstDay = date("w", strtotime(date($year."-".$month."-1"))); //一个月中第一天是周几
        $week = date("w", strtotime(date($year."-".$month."-".$day))); //当前天为周几
        $this->assign('year',$year);
        $this->assign('countDay',$countDay);
        $this->assign('firstDay',$firstDay);
        $this->assign('week',$week);
    }

    /**
     * 申请合作
     */
    public function joinus(){
        $seo = $this->getseo(config('seo_type.cemetery_home'));
        $this->assign('seo',$seo);
        return $this->fetch();
    }
    /**
     * 陵园合作申请验证
     */
    public function collaborate(){
        $cemetery_name = input("name");
        $cemetery_linkman = input("linkman");
        $cemetery_mobile = input("mobile");

        $returnInfo = array(
            'status' =>false,
            'msg' =>''
        );

        //验证IP
        $ip = request()->ip(1);
     
        //获取当前日期并生成时间戳
        $date = date("Y-m-d").' 00:00:00';
        $time = strtotime($date);
        //查询相同IP当天预约次数并进行判断
        $res=Db::name('collaborate')->where("ip=".$ip." and created_time>".$time)->count();
        
        //判断相同信息一天只能一次
        $collaborateWhere['cemetery'] = $cemetery_name;
        $collaborateWhere['name'] = $cemetery_linkman;
        $collaborateWhere['mobile'] = $cemetery_mobile;
        $collaborateWhere['created_time'] = array('gt',$time);
        $collaborateNum=Db::name('collaborate')->where($collaborateWhere)->count();
        if(!empty($collaborateNum)){
            $returnInfo['msg']='该信息已经提交!';
        }else if($res >= config('book_every_ip_num')){
             $returnInfo['msg']='今天预约次过多!';
        }else{
            //封装数据
            $data['ip'] = $ip;
            $data['cemetery'] = $cemetery_name;
            $data['name'] = $cemetery_linkman;
            $data['mobile'] = $cemetery_mobile;
            $data['created_time']=$data['updated_time']=time();

             //调用判断周几发送给谁的
            $type = array_search('陵园合作申请',config('business_email_msg'));
            $emailData = weeksEmail($type);
           
            if(!empty($emailData)){
                $emailAdd = array();
                foreach($emailData as $val){
                    $emailAdd[] = $val['email_address']; 
                    if($val['is_sendmsg']==1){
                        $admin_id = $val['admin_id'];
                        $admin_name = $val['name'];
                    }
                }

                //发送邮件
                $content = '陵园联系人：'.$data['name'].' 陵园手机号：'.$data['mobile'].' 陵园名称：'.$data['cemetery'].' 请及时联系！本邮件系统自动发送请忽回复！';
                if(sendMail($emailAdd,'陵园合作申请',$content)){
                    $status = 1;
                    $send_time = date('Y-m-d H:i:s');
                }else{
                    $status = 0;
                }
                //插入数据库
                foreach($emailData as $val){
                    $addData[] = array('type'=>$type,'email_address'=>$val['email_address'],'title'=>'陵园合作申请','content'=>$content,'status'=>$status,'send_time'=>$send_time,'creat_time'=>date('Y-m-d H:i:s'));
                }
                Db::name('email_log')->insertAll($addData);
            }
            //写入数据并判断
            $data['flow_man'] = $admin_name;
            $data['admin_id'] = $admin_id;
            if(Db::name('collaborate')->insert($data)){
                $returnInfo['status'] = true;
            $returnInfo['msg'] = '亲爱的 '.$cemetery_linkman.' 你好,请稍等,我们的客服人员会联系你！';
            }else{
                $returnInfo['msg'] = '申请失败！';
            }
        }
        echo json_encode($returnInfo);
    }

    
}
