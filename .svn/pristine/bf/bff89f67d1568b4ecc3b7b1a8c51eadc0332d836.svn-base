
    var map = new BMap.Map("Bmap"); // 创建地图实例
    map.addControl(new BMap.NavigationControl({
        type: BMAP_NAVIGATION_CONTROL_LARGE
    }));

    var pointArr = [];
    var longitude = data['longitude'],
        latitude = data['latitude'];
    var point = new BMap.Point(longitude, latitude);
    pointArr.push(point);
    var view = map.getViewport(pointArr),
        level = view.zoom, // 缩放级别
        zoomCenter = view.center; // 中心位置
    map.centerAndZoom(zoomCenter, level);

    map.enableScrollWheelZoom(); //启用地图滚轮放大缩小

    var _mapApi = function() {
        var options = {
            position: point, // 指定文本标注所在的地理位置
            offset: new BMap.Size(-40, -20) //设置文本偏移量
        };
        var label = new BMap.Label('<span class="cemname" style="position:unset;" data-name="' + data['name'] + '">' + data['name'] + '</span>', options); // 创建文本标注对象
        label.setStyle({
            position: 'absolute',
            top: '30px',
            left: '100px',
            padding: '0 16px',
            background: '#2b916b',
            color: '#fff',
            lineHeight: '28px',
            border: "1px solid white",
            cursor: 'pointer',
        });

        var sContent = "<h4 style='margin:0 0 5px 0;padding:0.2em 0'>" + data['name'] + "</h4><img style='float:right;margin:4px' id='imgDemo' src='" + data['image'] + "' width='139px' height='104px' src='" + data['name'] + "'/><p style='margin:0;line-height:1.5;font-size:13px;text-indent:2em'>" + data['address'] + "</p></div>";
        var infoWindow = new BMap.InfoWindow(sContent);
        
        var marker = new BMap.Marker(point), //创建marker对象
            siw = _infoWindow(data);

        label.addEventListener('click', function() {
            siw.open(marker);
            var busBtn = siw.dom.busBtn,
                driveBtn = siw.dom.driveBtn,
                transText = siw.dom.transText;
            $([busBtn, driveBtn]).click(function() {
                if ($(transText).val() != '') {
                    map.clearOverlays();
                    map.addOverlay(label);
                }
            });
            
           /*map.openInfoWindow(infoWindow,
                point
            );*/
        });
        setTimeout(function() {
            map.panTo(data.longitude, data.latitude);
        }, 500);
        map.addOverlay(label);
    };
    
   function _infoWindow(wd) {
        var content = '<div style="margin:0;line-height:20px;padding:2px;">' +
            '<img src="' + wd.image + '" alt="' + wd.name + '" style="float:right;zoom:1;overflow:hidden;width:150px;height:100px;margin-left:3px;"/>' +
            '地址：' + wd.address ;
        searchInfoWindow = new BMapLib.SearchInfoWindow(map, content, {
            title: wd.name, //标题
            width: 290, //宽度
            height: 105, //高度
            panel: "panel", //检索结果面板
            enableAutoPan: true, //自动平移
            searchTypes: [
                BMAPLIB_TAB_TO_HERE, //到这里去
                BMAPLIB_TAB_FROM_HERE //从这里出发
            ]
        });

        return searchInfoWindow;
    }
    
    

    //详情跟随顶部导航
    var mt = 0;
    window.onload = function() {
        if(isMap){
            $('.address_map').click();
            location.href = "#tab5"; 
        }
        _loadPage(1, data['tombs'],'.tombtype',1);
        _loadPage(1, data['celebrity'],'.cem_detail_celebrity',2);
        _loadPage(1, data['comments'],'.cem_details_remark',3);
        _mapApi();
        var mydiv = document.getElementById("cem_detail_title");
        var mt = mydiv.offsetTop; //当前对象到距离上方或上层控件的位置
        var tt = document.documentElement.scrollTop || document.body.scrollTop;
        if (tt > mt) {
            mydiv.style.position = "fixed";
            mydiv.style.margin = "0";
            mydiv.style.top = "0";
        }
        window.onscroll = function() {
            var t = document.documentElement.scrollTop || document.body.scrollTop;
            if (t > mt) {
                mydiv.style.position = "fixed";
                mydiv.style.margin = "0";
                mydiv.style.top = "0";
            } else {
                mydiv.style.position = "static";
            }
        };
    };

    //添加评星
    $("#hj").raty({
        click: function(t, e) {
            $("#evalForm input[name='hj']").val(t);
        }
    }), $("#jg").raty({
        click: function(t, e) {
            $("#evalForm input[name='jg']").val(t);
        }
    }), $("#jt").raty({
        click: function(t, e) {
            $("#evalForm input[name='jt']").val(t);
        }
    }), $("#fw").raty({
        click: function(t, e) {
            $("#evalForm input[name='fw']").val(t);
        }
    });

    $('.remark_btn_a').click(function(){
        var url = $(this).attr('data-url');
        var data = $('#evalForm').serialize();
        $.ajax({
            url:url,
            type:'post',
            data:data,
            dataType:'json',
            success:function(result){
                if(result){
                    if(result['code'] == 1){
                        window.location.reload();
                    }
                }
            }
        });
    });

    $('.lookmap').click(function(){
        $('.address_map').click();
        location.href = "#tab5"; 
    });

    $('.comment_star').each(function() {
        var value = $(this).data('value');
        $(this).raty({
            readOnly: true,
            score: value,
            // size:400,
        });
    });

    var zoneId = 0;
    $('.tomb_zones').click(function(){
        $('.tomb_zones').parent('li').removeClass('led');
        $(this).parent('li').addClass('led');
        $('.tombs_price').parent('li').removeClass('led')
        $('.tombs_price[data-range="0"]').parent('li').addClass('led');
        zoneId = $(this).data('zone');
        var arr = [];
        if(zoneId > 0){
            $.each(data['tombs'],function(k,v){
                if(zoneId == v['tomb_zone_id']){
                    arr.push(v);
                }
            });
        }else{
            arr = data['tombs'];
        }
        _loadPage(1,arr,'.tombtype',1);
    });

    $('.tombs_price').click(function() {
        $('.tombs_price').parent('li').removeClass('led');
        $(this).parent('li').addClass('led');
        var range = $(this).data('range'),
            zone,
            min = Number(priceConfig[priceConfig.length - priceConfig.length]),
            max = Number(priceConfig[priceConfig.length - 1]),
            datas = [];

        $.each(data['tombs'], function(index, item) {
            if (typeof range == 'string') {
                var priceRange = range.split('-');
                if (Number(item['sales_price']) > Number(priceRange[0]) && Number(item['sales_price']) < Number(priceRange[1])) {
                    datas.push(item);
                }
            } else {
                if (range == 0) {
                    datas.push(item);
                } else {
                    if (range == min && (Number(item['sales_price']) < min || Number(item['sales_price']) == min)) {
                        datas.push(item);
                    } else if (range == max && (Number(item['sales_price']) > max || Number(item['sales_price']) == max)) {
                        datas.push(item);
                    }
                }
            }
        });
        if(zoneId != 0){
            var dt = [];
            for(i in datas){
                if(datas[i]['tomb_zone_id'] == zoneId){
                    dt.push(datas[i]);
                }
            }
            _loadPage(1,dt,'.tombtype',1)
        }else{
            _loadPage(1, datas,'.tombtype',1);
        }

    });

    /**
     * 加载分页
     * @param  {number} currentPage 当前页，默认1
     * @param  {array}  pageData    每页显示的数据
     * @param  {string} vessel      分页容器
     * @param  {number} type        分类：1墓地，2名人墓地，3评论
     * @return {void}
     */
    var _loadPage = function(currentPage, pageData, vessel,type) {
        $(vessel+' .paging ul li').removeClass('numled');
        var p = '<ul>',
            total = pageData.length,// 数据长度
            pageNum = 9,// 每页显示条数
            pages = Math.ceil(total / pageNum),// 总页数
            side = 3,
            win = side * 2;
        var datas = pageData.slice((currentPage - 1) * pageNum, (pageNum * currentPage));
        type == 1 ? _loadTombs(datas) : (type == 2 ? _loadCelebrity(datas) : type == 3 ? _loadComment(datas) : '');
        p += '<li data-page="" class="tzd">共' + total + '条数据</li>';
        if (pages > 1) {
            // 当前页大于1显示上一页按钮
            if (currentPage > 1) {
                p += '<li data-page="' + (currentPage - 1) + '" class="jiant jianled"><a href="#cem_detail"><i class="iconfont icon-arrow-left-copy"></i></a></li>';
            }

            if (pages <= win + 6) {
                for (var i = 1; i <= pages; i++) {
                    var numled = '';
                    if (currentPage == i) {
                        numled = 'class="numled"';
                    }
                    p += '<li ' + numled + ' data-page="' + i + '"><a href="#cem_detail">' + i + '</a></li>';
                }
            } else {
                for (var x = 1; x <= 2; x++) {
                    var classNumled = '';
                    if (currentPage == x) {
                        classNumled = 'class="numled"';
                    }
                    p += '<li ' + classNumled + ' data-page="' + x + '"><a href="#cem_detail">' + x + '</a></li>';
                }

                if (currentPage >= win + 1) {
                    p += '<li><a href="#cem_detail">...</a></li>';
                }
                for (var j = 1; j <= pages; j++) {
                    var numled = '';
                    if (j < pages - 1 && j > 2) {
                        if (currentPage == j) {
                            numled = 'class="numled"';
                        }
                        if (currentPage <= win) {
                            if (j <= win + 2) {
                                p += '<li ' + numled + ' data-page="' + j + '"><a href="#cem_detail">' + j + '</a></li>';
                            }
                        } else {
                            if ((j <= currentPage && j >= currentPage - 3) || (j >= currentPage && j <= currentPage + 3)) {
                                p += '<li ' + numled + ' data-page="' + j + '"><a href="#cem_detail">' + j + '</a></li>';
                            }
                        }
                    }
                }
                if (currentPage <= pages - (pages - (pages - win))) {
                    p += '<li><a href="#cem_detail">...</a></li>';
                }

                for (var y = pages - 1; y <= pages; y++) {
                    var claN = '';
                    if (currentPage == y) {
                        claN = 'class="numled"'
                    }
                    p += '<li '+claN+' data-page="' + y + '"><a href="#cem_detail">' + y + '</a></li>';
                }
            }

            // 当前页小于最后一页显示下一页按钮
            if (currentPage < pages) {
                p += '<li data-page="' + (currentPage + 1) + '" class="jiant"><a href="#cem_detail"><i class="iconfont icon-arrow-left-copy1"></i></a></li>';
            }
        }
        p += '</ul>';
        $(vessel+' .paging').empty().append(p);
    };

    /**
     * 名人墓地
     * @param  {array} data 名人墓地数据
     * @return {void}
     */
    var _loadCelebrity = function(data) {
        var c = '';
        $.each(data, function(key, val) {
            c += '<div class="celebrity_list_box"><div class="celebrity_list_main clearfix"><div class="celebrity_list_main_img"><a target="_blank" title="' + val.name + '" href="{:url("/celebrity/' + val.id + '")}"><img src="' + val.image_url + '" alt="' + val.name + '"/></a></div><div class="celebrity_list_main_info"><h2 class="clearfix"><a target="_blank" title="' + val.name + '" href="{:url("/celebrity/' + val.id + '")}">' + val.name + '<span>（ ' + val.born_in + '-' + val.died_in + ' ）</span></a></h2><h3>' + val.life_info + '</h3><p>' + val.summary + '</p></div><div class="celebrity_list_main_more"><a class="buttonlv" target="_blank" title="' + val.name + '" href="{:url("/celebrity/' + val.id + '")}">了解更多</a></div></div></div>';
        });
        $('.cem_detail_celebrity .celebrity_list').empty().append(c);
    };

    /**
     * 评论列表
     * @param  {array} data 评论数据
     * @return {void}
     */
    var _loadComment = function(data) {
        var comm = '';
        $.each(data, function(k, v) {
            var mobile = v.mobile.substr(0, 3) + '****' + v.mobile.substr(7),
                commentTime = '';
            if (v.comment_time != '0000-00-00 00:00:00') {
                commentTime = v.comment_time;
            }
            comm += '<div class="evaluate_main"><div class="evaluate_main_yh">' + mobile + '</div><div class="evaluate_main_pj"><p>' + v.content + '</p></div><div class="evaluate_main_xing"><span class="comment_pf" data-value="' + v.avg + '"></span><p>' + commentTime + '</p></div><div class="clear"></div></div>';
        });

        $('.cem_details_remark .comment_list').empty().append(comm);

        $('.comment_pf').each(function() {
            var value = $(this).data('value');
            $(this).raty({
                readOnly: true,
                score: value
            });
        });
    };


    /**
     * 墓型列表
     * @param  {array} data 墓型数据
     * @return {void}
     */
    var _loadTombs = function(data) {
        var d = '',
            i = 1;
        $.each(data, function(key, val) {
            var cl = '';
            if (i % 3 == 0) {
                cl = 'class="last"';
            }
            d += '<li ' + cl + '><img src="' + val['image'] + '" alt="' + val['tomb_name'] + '"/>';
            if (val['status'] == 0) {
                d += '<span class="ygwicon"></span>';
            }
            d += '<div class="txt"><h2>' + val['tomb_name'] + '</h2><p><span>参考价：</span>';
            if(val['sales_price'] != '0.00'){
                d += '<strong>'+val['sales_price']+'</strong><span>'+ val['unit'] + '</span>';
            }else{
                d += '--';
            }
            d +=  '</p><div class="small clearfix"><p class="smalla"><span>大小：</span>' + val['size'] + '</p><p><span>穴位：</span>' + val['meridians'] + '</p></div><p><span>材质：</span>' + val['material'] + '</p><div class="btn clearfix"><a title="' + val['tomb_name'] + '" href="{:url("/book/' + sid + '")}">预约看墓</a><a class="zxzx" target="_blank" href="http://p.qiao.baidu.com/im/index?siteid=8935186&amp;ucid=20177439">在线咨询</a></div></div></li>';
            i++;
        });

        $('.tombtype ul').empty().append(d);
    }

    $(document).on('click', '.tombtype .paging ul li', function() {
        var currentPage = $(this).data('page');
        if (currentPage != '') {
            $('.tombtype ul').empty();
            _loadPage(currentPage, data['tombs'],'.tombtype',1);
        }
    });

    $(document).on('click', '.cem_detail_celebrity .paging ul li', function() {
        var currentPage = $(this).data('page');
        if (currentPage != '') {
            $('.cem_detail_celebrity .celebrity_list').empty();
            _loadPage(currentPage, data['celebrity'],'.cem_detail_celebrity',2);
        }
    });

    $(document).on('click', '.cem_details_remark .paging ul li', function() {
        var currentPage = $(this).data('page');
        if (currentPage != '') {
            $('.cem_details_remark .comment_list').empty();
            _loadPage(currentPage, data['comments'],'.cem_details_remark',3);
        }
    });

    // 环境照片点击小图弹出大图
    $('.fancybox').fancybox();

    $('.environment_title li').click(function() {
        $('.environment_title li').removeClass('led');
        $(this).addClass('led');
        var landscape = data['landscape']['list'],
            zone = $(this).data('zone'),
            env = $('.environment li'),
            str = '';
        if (landscape) {
            var i = 1;
            $.each(landscape, function(key, val) {
                //点击有园区走这
                if (zone == val['tomb_zone_id']) {
                    if (zone != 0) {
                        str += _handleImages(val, i);
                    }
                } 
                //点击全部走这
                if (zone == 0) {
                    str += _handleImages(val, i);
                }
                i++;
            });
        }

        $('.environment ul').empty().append(str);
    });

    var _handleImages = function(data, k) {
        var x = '',
            cla = '';
        if (k % 3 == 0) {
            cla = 'class="last"';
        }
        x += '<li ' + cla + '>';
        x += '<a class="fancybox" href="' + data['image'] + '" data-fancybox-group="group" title="' + data['title'] + '"><img src="' + data['thumb_image'] + '" alt="' + data['title'] + '" /><p>' + data['title'] + '</p></a>';
        x += '</li>';

        return x;
    };