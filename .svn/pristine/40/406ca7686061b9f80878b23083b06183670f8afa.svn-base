<?php
namespace back\analysis\controller;
use think\Controller;
use back\extra\controller\Base;
use think\Request;
use think\Db;
use think\Session;//session类
use back\extra\model\OrderGrave;

/**
 * 统计控制器
 */
class Analysis extends Base
{
    /**
     * 封装订单分析时间
     * @param  input|field;//字段名
     * @param  input|$monthlength;//默认担前几个月(默认当月)
     * @return  output|array;
     */
    private function ordertime($field,$monthlength = 0){
        $where = array();
        $start_time = input('start_time');
        $end_time = input('end_time');
        if(!empty($start_time) && empty($end_time)){
            $where[$field] = array('egt',strtotime($start_time));
        }
        if(!empty($end_time) && empty($start_time)){
            $where[$field] = array('elt',strtotime($end_time.' 23:59:59'));
        }
        if(!empty($start_time) && !empty($end_time)){
            $where[$field] = array('BETWEEN',array(strtotime($start_time),strtotime($end_time.' 23:59:59')));
        }
        //默认当月
        if(empty($start_time)){
            $year = date("Y");
            $month = date('m') - $monthlength;
            $where[$field] = array('egt',strtotime($year."-".$month."-1"));
            $start_time = $year."-".$month."-1";
        }
        $this->assign('start_time',$start_time);
        return $where;
    }
    /**
     * 订单分析
     * @param  input|void;
     * @return  output|void;
     */
    public function orderanalysis(){
        //获取统计(订单)类型
        $inputdata= input('get.options/a');
        if(empty($inputdata)){
            $options = array();
        }else{
            $options = $inputdata;
        }
        //封装时间
        $where = array();
        $where = $this->ordertime('created_time');
        //封装搜索地区
        $search_province_id = input('get.regionData/a');
        if(!empty($search_province_id)){
            $where['province_id'] = array('in',$search_province_id); 
        }
        //查询数据
        $where['state'] = config('normal_status');
        $field = 'province_id,status,store_status,send_finance_status';
        $OrderData = Db::name('OrderGrave')->field($field)->order('province_id ASC')->where($where)->select();
        //dump($OrderData);die;
        $lastData = array(); 
        foreach($OrderData as $lastDatas){  
            if(array_key_exists($lastDatas['province_id'], $lastData)){
                //订单总数
                $lastData[$lastDatas['province_id']]['all_total'] +=1;
                //订单状态
                if(in_array('check_success',$options)&&($lastDatas['status'] == config('order_status.check_success'))&&($lastDatas['send_finance_status'] == config('normal_status'))){ //待收佣金
                    $lastData[$lastDatas['province_id']]['check_success'] +=1; 
                }else if(in_array('get_money',$options)&&($lastDatas['status'] == config('order_status.get_money'))){ //待返现
                    $lastData[$lastDatas['province_id']]['get_money'] +=1; 
                }else if(in_array('deposit',$options)&&($lastDatas['status'] == config('order_status.deposit'))){ //已交订金
                    $lastData[$lastDatas['province_id']]['deposit'] +=1; 
                }
                //商家(非)会员
                if(in_array('store_status',$options)&&in_array($lastDatas['store_status'],array('19','20','16','14'))){//会员订单
                    $lastData[$lastDatas['province_id']]['store_status'] +=1;
                }else if(in_array('no_store_status',$options)&&($lastDatas['store_status'] == 0)){ //非会员订单
                    $lastData[$lastDatas['province_id']]['no_store_status'] +=1; 
                }
            }else{
                //初始化数据
                $lastData[$lastDatas['province_id']]['check_success'] = 0;
                $lastData[$lastDatas['province_id']]['get_money'] = 0;
                $lastData[$lastDatas['province_id']]['deposit'] = 0;
                $lastData[$lastDatas['province_id']]['success'] = 0; 
                $lastData[$lastDatas['province_id']]['store_status'] = 0;
                $lastData[$lastDatas['province_id']]['no_store_status'] =0;
                //订单总数
                $lastData[$lastDatas['province_id']]['all_total'] =1; 
                //订单状态
                if(in_array('check_success',$options)&&($lastDatas['status'] == config('order_status.check_success'))&&($lastDatas['send_finance_status'] == config('normal_status'))){//待收佣金
                    $lastData[$lastDatas['province_id']]['check_success'] =1; 
                }else if(in_array('get_money',$options)&&($lastDatas['status'] == config('order_status.get_money'))){ //待返现
                    $lastData[$lastDatas['province_id']]['get_money'] =1; 
                }else if(in_array('deposit',$options)&&($lastDatas['status'] == config('order_status.deposit'))){ //待返现
                    $lastData[$lastDatas['province_id']]['deposit'] =1; 
                }
                //商家(非)会员
                if(in_array('store_status',$options)&&in_array($lastDatas['store_status'],array('19','20','16','14'))){ //会员订单
                    $lastData[$lastDatas['province_id']]['store_status'] =1; 
                }else if(in_array('no_store_status',$options)&&($lastDatas['store_status'] == 0)){ //非会员订单
                    $lastData[$lastDatas['province_id']]['no_store_status'] =1;
                }
            }
        }
        //dump($lastData);die;
        //查找完成订单数据
        if(in_array('success',$options)){ //完成订单
            $whereSuccess = $this->ordertime('payfor_us_time');
            if(!empty($search_province_id)){
                $whereSuccess['province_id'] = array('in',$search_province_id);
            }
            $whereSuccess['state'] = config('normal_status');
            $whereSuccess['status'] = config('order_status.success');
            $field = 'province_id';
            $OrderDataSuccess = Db::name('OrderGrave')->field($field)->order('province_id ASC')->where($whereSuccess)->select();
            foreach($OrderDataSuccess as $lastDataSuccess){  
                $lastData[$lastDataSuccess['province_id']]['success'] +=1; 
            }
        }
        //查找地区
        $regionData = $this->getRegionData(array('status'=>config('normal_status'),'level'=>1),array('id,name'),'',true);
        //dump($regionData);die;
        /*
        $this->assign('selectAll',I('selectAll'));*/
        //dump('this is ok');die;
        $this->assign('search_province_id',$search_province_id);
        $this->assign('options',$options);
        $this->assign('lastData',$lastData);
        $this->assign('regionData',$regionData);
        return $this->fetch();
    }
    /**
     * (订单分析)下载
     * @param  input|void;
     * @return  output|void;
     */
    public function orderanalysisdown(){
        //获取统计(订单)类型
        $inputdata= input('get.options/a');
        if(empty($inputdata)){
            $options = array();
        }else{
            $options = $inputdata;
        }
        //封装时间
        $where = array();
        $where = $this->ordertime('created_time');
        //封装搜索地区
        $search_province_id = input('get.regionData/a');
        if(!empty($search_province_id)){
            $where['province_id'] = array('in',$search_province_id); 
        }
        //查询数据
        $where['state'] = config('normal_status');
        $field = 'province_id,status,store_status,send_finance_status';
        $OrderData = Db::name('OrderGrave')->field($field)->order('province_id ASC')->where($where)->select();
        //dump($OrderData);die;
        $lastData = array(); 
        foreach($OrderData as $lastDatas){  
            if(array_key_exists($lastDatas['province_id'], $lastData)){
                //订单总数
                $lastData[$lastDatas['province_id']]['all_total'] +=1;
                //订单状态
                if(in_array('check_success',$options)&&($lastDatas['status'] == config('order_status.check_success'))&&($lastDatas['send_finance_status'] == config('normal_status'))){ //待收佣金
                    $lastData[$lastDatas['province_id']]['check_success'] +=1; 
                }else if(in_array('get_money',$options)&&($lastDatas['status'] == config('order_status.get_money'))){ //待返现
                    $lastData[$lastDatas['province_id']]['get_money'] +=1; 
                }else if(in_array('deposit',$options)&&($lastDatas['status'] == config('order_status.deposit'))){ //已交订金
                    $lastData[$lastDatas['province_id']]['deposit'] +=1; 
                }
                //商家(非)会员
                if(in_array('store_status',$options)&&in_array($lastDatas['store_status'],array('19','20','16','14'))){//会员订单
                    $lastData[$lastDatas['province_id']]['store_status'] +=1;
                }else if(in_array('no_store_status',$options)&&($lastDatas['store_status'] == 0)){ //非会员订单
                    $lastData[$lastDatas['province_id']]['no_store_status'] +=1; 
                }
            }else{
                //初始化数据
                $lastData[$lastDatas['province_id']]['check_success'] = 0;
                $lastData[$lastDatas['province_id']]['get_money'] = 0;
                $lastData[$lastDatas['province_id']]['deposit'] = 0;
                $lastData[$lastDatas['province_id']]['success'] = 0; 
                $lastData[$lastDatas['province_id']]['store_status'] = 0;
                $lastData[$lastDatas['province_id']]['no_store_status'] =0;
                //订单总数
                $lastData[$lastDatas['province_id']]['all_total'] =1; 
                //订单状态
                if(in_array('check_success',$options)&&($lastDatas['status'] == config('order_status.check_success'))&&($lastDatas['send_finance_status'] == config('normal_status'))){//待收佣金
                    $lastData[$lastDatas['province_id']]['check_success'] =1; 
                }else if(in_array('get_money',$options)&&($lastDatas['status'] == config('order_status.get_money'))){ //待返现
                    $lastData[$lastDatas['province_id']]['get_money'] =1; 
                }else if(in_array('deposit',$options)&&($lastDatas['status'] == config('order_status.deposit'))){ //待返现
                    $lastData[$lastDatas['province_id']]['deposit'] =1; 
                }
                //商家(非)会员
                if(in_array('store_status',$options)&&in_array($lastDatas['store_status'],array('19','20','16','14'))){ //会员订单
                    $lastData[$lastDatas['province_id']]['store_status'] =1; 
                }else if(in_array('no_store_status',$options)&&($lastDatas['store_status'] == 0)){ //非会员订单
                    $lastData[$lastDatas['province_id']]['no_store_status'] =1;
                }
            }
        }
        //dump($lastData);die;
        //查找完成订单数据
        if(in_array('success',$options)){ //完成订单
            $whereSuccess = $this->ordertime('payfor_us_time');
            if(!empty($search_province_id)){
                $whereSuccess['province_id'] = array('in',$search_province_id);
            }
            $whereSuccess['state'] = config('normal_status');
            $whereSuccess['status'] = config('order_status.success');
            $field = 'province_id';
            $OrderDataSuccess = Db::name('OrderGrave')->field($field)->order('province_id ASC')->where($whereSuccess)->select();
            foreach($OrderDataSuccess as $lastDataSuccess){  
                $lastData[$lastDataSuccess['province_id']]['success'] +=1; 
            }
        }
        //查找地区
        $regionData = $this->getRegionData(array('status'=>config('normal_status'),'level'=>1),array('id,name'),'',true);
        // 引入PHPExcel
        vendor('PHPExcel.PHPExcel');
        $phpExcel = new \PHPExcel();

        $phpExcel->getProperties()->setCreator('hgy')
            ->setLastModifiedBy('hgy')
            ->setTitle('Office 2007 XLSX Test Document')
            ->setSubject('Office 2007 XLSX Test Document')
            ->setDescription('Test document for Office 2007 XLSX, generated using PHP classes.')
            ->setKeywords('office 2007 openxml php')
            ->setCategory('Test result file');
       
        // 设置行宽度
        $phpExcel->getActiveSheet()->getColumnDimension('A')->setWidth(20);
        $phpExcel->getActiveSheet()->getColumnDimension('B')->setWidth(14);
        $phpExcel->getActiveSheet()->getColumnDimension('C')->setWidth(14);
        $phpExcel->getActiveSheet()->getColumnDimension('D')->setWidth(14);
        $phpExcel->getActiveSheet()->getColumnDimension('E')->setWidth(14);
        $phpExcel->getActiveSheet()->getColumnDimension('F')->setWidth(14);
        $phpExcel->getActiveSheet()->getColumnDimension('G')->setWidth(14);
        $phpExcel->getActiveSheet()->getColumnDimension('H')->setWidth(14);
        $phpExcel->getActiveSheet()->getColumnDimension('I')->setWidth(14);
             
        $phpExcel->getActiveSheet()->getDefaultStyle()->getFont()->setSize(10);//所有字体大小
        $phpExcel->getActiveSheet()->getStyle('A1:H1')->getFont()->setBold(true);//A1到I1加粗
        $phpExcel->getActiveSheet()->getStyle('A1:H1')->getAlignment()->setVertical(\PHPExcel_Style_Alignment::VERTICAL_CENTER)->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $phpExcel->getActiveSheet()->getStyle('A1:H1')->getBorders()->getAllBorders()->setBorderStyle(\PHPExcel_Style_Border::BORDER_THIN);
        
        // 设置水平居中
        $phpExcel->getActiveSheet()->getStyle('A')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $phpExcel->getActiveSheet()->getStyle('B')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $phpExcel->getActiveSheet()->getStyle('C')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $phpExcel->getActiveSheet()->getStyle('D')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $phpExcel->getActiveSheet()->getStyle('E')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $phpExcel->getActiveSheet()->getStyle('F')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $phpExcel->getActiveSheet()->getStyle('G')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $phpExcel->getActiveSheet()->getStyle('H')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $phpExcel->getActiveSheet()->getStyle('I')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        // 设置表格标题
        $phpExcel->setActiveSheetIndex(0)->setCellValue('A1','城市')->setCellValue('B1','订单总数')->setCellValue('C1','完成订单')->setCellValue('D1','待收佣金')->setCellValue('E1','已交订金')->setCellValue('F1','待返现')->setCellValue('G1','会员')->setCellValue('H1','非会员');
        // 设置行高度
        $phpExcel->getActiveSheet()->getRowDimension(1)->setRowHeight(22);
        
        //初始化数据
        $i = 1;
        $all_total = 0;
        $check_success = 0;
        $get_money = 0;
        $deposit = 0;
        $success = 0;
        $store_status = 0;
        $no_store_status = 0;
        foreach($lastData as $k=>$val){
            ++$i;
            $phpExcel->getActiveSheet(0)->setCellValue('A'.$i,$regionData[$k]);
            $phpExcel->getActiveSheet(0)->setCellValue('B'.$i,$val['all_total']);
            $phpExcel->getActiveSheet(0)->setCellValue('C'.$i,$val['success']);
            $phpExcel->getActiveSheet(0)->setCellValue('D'.$i,$val['check_success']);
            $phpExcel->getActiveSheet(0)->setCellValue('E'.$i,$val['deposit']);
            $phpExcel->getActiveSheet(0)->setCellValue('F'.$i,$val['get_money']);
            $phpExcel->getActiveSheet(0)->setCellValue('G'.$i,$val['store_status']);
            $phpExcel->getActiveSheet(0)->setCellValue('H'.$i,$val['no_store_status']);
            $phpExcel->getActiveSheet()->getStyle('A'.$i.':H'.$i)->getAlignment()->setVertical(\PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $phpExcel->getActiveSheet()->getStyle('A'.$i.':H'.$i)->getBorders()->getAllBorders()->setBorderStyle(\PHPExcel_Style_Border::BORDER_THIN);
            $phpExcel->getActiveSheet()->getRowDimension($i)->setRowHeight(16);
            
            $all_total += $val['all_total'];
            $check_success += $val['check_success'];
            $get_money += $val['get_money'];
            $deposit += $val['deposit'];
            $success += $val['success'];
            $store_status += $val['store_status'];
            $no_store_status += $val['no_store_status'];
        }
        ++$i;
        $phpExcel->getActiveSheet(0)->setCellValue('A'.$i,'总和');
        $phpExcel->getActiveSheet(0)->setCellValue('B'.$i,$all_total);
        if(in_array('success',$options)){
            $phpExcel->getActiveSheet(0)->setCellValue('C'.$i,$success);
        }
        if(in_array('check_success',$options)){
            $phpExcel->getActiveSheet(0)->setCellValue('D'.$i,$check_success);
        }
        if(in_array('deposit',$options)){
            $phpExcel->getActiveSheet(0)->setCellValue('E'.$i,$deposit);
        }
        if(in_array('get_money',$options)){
            $phpExcel->getActiveSheet(0)->setCellValue('F'.$i,$get_money);
        }
        if(in_array('store_status',$options)){
            $phpExcel->getActiveSheet(0)->setCellValue('G'.$i,$store_status);
        }
        if(in_array('no_store_status',$options)){
            $phpExcel->getActiveSheet(0)->setCellValue('H'.$i,$no_store_status);
        }
        $phpExcel->getActiveSheet()->getStyle('A'.$i.':H'.$i)->getAlignment()->setVertical(\PHPExcel_Style_Alignment::VERTICAL_CENTER);
        $phpExcel->getActiveSheet()->getStyle('A'.$i.':H'.$i)->getBorders()->getAllBorders()->setBorderStyle(\PHPExcel_Style_Border::BORDER_THIN);
        $phpExcel->getActiveSheet()->getRowDimension($i)->setRowHeight(22);
        
        //删除列
        if(!in_array('no_store_status',$options)){
            $phpExcel->getActiveSheet()->removeColumn('H');
        }
        if(!in_array('store_status',$options)){
            $phpExcel->getActiveSheet()->removeColumn('G');
        }
        if(!in_array('get_money',$options)){
            $phpExcel->getActiveSheet()->removeColumn('F');
        }
        if(!in_array('deposit',$options)){
            $phpExcel->getActiveSheet()->removeColumn('E');
        }
        if(!in_array('check_success',$options)){
            $phpExcel->getActiveSheet()->removeColumn('D');
        }
        if(!in_array('success',$options)){
            $phpExcel->getActiveSheet()->removeColumn('C');
        }
        // excel头参数
        header('Content-Type: application/vnd.ms-excel'); // 生成xls/xlsx文件
        // header('Content-Type: text/csv'); // 生成csv文件
        header('Content-Disposition: attachment;filename="订单数据('.input('start_time').'--'.input('end_time').').xls"'); // 后缀名:xls/xlsx/csv
        header('Cache-Control: max-age=0');
        $phpWriter = \PHPExcel_IOFactory::createWriter($phpExcel, 'Excel5'); // Excel5:xls; Excel2007:xlsx; CSV:csv;
        $phpWriter->save('php://output');
        
        
    }
     /**
     * 订单详情
     * @param   input   void;
     * @return  output  void;
     */
    public function orderdetails(){
        //接收数据(一个用于分页，一个用于查询条件)
        $input = $inputtmp = input('get.');
        //处理时间
        $where = $this->ordertime($inputtmp['field']);
        //删除不需要的条件
        unset($inputtmp['field']);
        unset($inputtmp['start_time']);
        unset($inputtmp['end_time']);
        unset($inputtmp['page']);
        foreach($inputtmp as $k=>$v){
            if($k == 'store_status' && $v!='0'){
                $where[$k] = ['neq',0];
            }else{
                $where[$k] = $v;
            }
        }
        $where['state'] = config('normal_status');
        $field = 'order_grave_sn,store_name,reservation_person,reservation_phone,buyer,mobile,order_flow_id,success_time,appoint_time,brokerage_percent,paid_in_amount';
        $pageSize = Config('page_size');
        $orderData = OrderGrave::with(array('flowman'))->field($field)->order('id DESC')->where($where)->paginate($pageSize,false,['query'=>$input]);
        //分页
        $page = $orderData->render();
        $this->assign('orderData',$orderData);
        $this->assign('page',$page);
        $this->assign('input',$input);
        return $this->fetch();
    }
    /**
    * 订单详情下载
    * @param   input   void;
    * @return  output  void;
    */
    public function orderdetailsdown(){
        $info = input('post.');
        $where = $this->ordertime($info['field']);
        //删除不需要的条件
        unset($info['field']);
        unset($info['start_time']);
        unset($info['end_time']);
        unset($info['page']);
        foreach($info as $k=>$v){
            if($k == 'store_status' && $v!='0'){
                $where[$k] = ['neq',0];
            }else{
                $where[$k] = $v;
            }
        }
        $where['state'] = config('normal_status');
        $field = 'order_grave_sn,store_id,store_name,reservation_person,reservation_phone,buyer,mobile,order_flow_id,success_time,appoint_time,brokerage_percent,paid_in_amount';
        $orderData = OrderGrave::with(array('flowman','storecontact'))->field($field)->order('id DESC')->where($where)->select();
        //dump($orderData);die;
        // 引入PHPExcel
        vendor('phpexcel.PHPExcel');
        $phpExcel = new \PHPExcel();
        
        $phpExcel->getProperties()->setCreator('hgy')
            ->setLastModifiedBy('hgy')
            ->setTitle('Office 2007 XLSX Test Document')
            ->setSubject('Office 2007 XLSX Test Document')
            ->setDescription('Test document for Office 2007 XLSX, generated using PHP classes.')
            ->setKeywords('office 2007 openxml php')
            ->setCategory('Test result file');
        // 设置行宽度
        $phpExcel->getActiveSheet()->getColumnDimension('A')->setWidth(14);//购买人
        $phpExcel->getActiveSheet()->getColumnDimension('B')->setWidth(14);//购买手机
        $phpExcel->getActiveSheet()->getColumnDimension('C')->setWidth(30);//陵园名称
        $phpExcel->getActiveSheet()->getColumnDimension('D')->setWidth(55);//陵园联系人信息
        $phpExcel->getActiveSheet()->getColumnDimension('E')->setWidth(14);//佣金比
        $phpExcel->getActiveSheet()->getColumnDimension('F')->setWidth(14);//佣金金额
        $phpExcel->getActiveSheet()->getColumnDimension('G')->setWidth(20);//订单跟踪人
        $phpExcel->getActiveSheet()->getColumnDimension('H')->setWidth(20);//预约时间
        // 设置行高度
        $phpExcel->getActiveSheet()->getRowDimension('1')->setRowHeight(22);
        
        $phpExcel->getActiveSheet()->getDefaultStyle()->getFont()->setSize(10); //所有字体大小
        $phpExcel->getActiveSheet()->getStyle('A1:H1')->getFont()->setBold(true); //A1到H1加粗
        $phpExcel->getActiveSheet()->getStyle('A1:H1')->getAlignment()->setVertical(\PHPExcel_Style_Alignment::VERTICAL_CENTER)->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $phpExcel->getActiveSheet()->getStyle('A1:H1')->getBorders()->getAllBorders()->setBorderStyle(\PHPExcel_Style_Border::BORDER_THIN);

        // 设置水平居中
        //$phpExcel->getActiveSheet()->getStyle('A')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        //$phpExcel->getActiveSheet()->getStyle('B')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        //$phpExcel->getActiveSheet()->getStyle('C')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        //$phpExcel->getActiveSheet()->getStyle('D')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $phpExcel->getActiveSheet()->getStyle('E')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $phpExcel->getActiveSheet()->getStyle('F')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        //$phpExcel->getActiveSheet()->getStyle('G')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $phpExcel->getActiveSheet()->getStyle('H')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        
        // 设置表格标题
        $phpExcel->setActiveSheetIndex(0)
            ->setCellValue('A1','购买人')
            ->setCellValue('B1','手机号')
            ->setCellValue('C1','陵园名称')
            ->setCellValue('D1','陵园联系人')
            ->setCellValue('E1','佣金比(%)')
            ->setCellValue('F1','佣金金额')
            ->setCellValue('G1','跟踪人')
            ->setCellValue('H1','预约时间');
        $count = count($orderData);
        for($i=0;$i<$count;$i++){
            //判断预约人和购买人
            if(empty($orderData[$i]['buyer'])){
                $phpExcel->getActiveSheet(0)->setCellValue('A'.($i+2),$orderData[$i]['reservation_person']);
                if(empty($orderData[$i]['reservation_phone'])){
                    $orderData[$i]['reservation_phone'] = '';
                }
                $phpExcel->getActiveSheet(0)->setCellValue('B'.($i+2),$orderData[$i]['reservation_phone']); 
            }else{
                $phpExcel->getActiveSheet(0)->setCellValue('A'.($i+2),$orderData[$i]['buyer']);
                if(empty($orderData[$i]['mobile'])){
                    $orderData[$i]['mobile'] = '';
                }
                $phpExcel->getActiveSheet(0)->setCellValue('B'.($i+2),$orderData[$i]['mobile']); 
            }
            $phpExcel->getActiveSheet(0)->setCellValue('C'.($i+2),$orderData[$i]['store_name']);
            //商家联系人处理
            $contact = '';
            $contact = '联系人:'.$orderData[$i]['storecontact']['contact_name'];
            if(!empty($orderData[$i]['storecontact']['mobile'])){
                $contact .= '手机:'.$orderData[$i]['storecontact']['mobile'];
            }
            if(!empty($orderData[$i]['storecontact']['tel'])){
                $contact .= '座机:'.$orderData[$i]['storecontact']['tel'];
            }
            $phpExcel->getActiveSheet(0)->setCellValue('D'.($i+2),$contact);
            if($orderData[$i]['brokerage_percent']){
                $orderData[$i]['brokerage_percent'] = '';
            }
            $phpExcel->getActiveSheet(0)->setCellValue('E'.($i+2),$orderData[$i]['brokerage_percent']);
            if($orderData[$i]['paid_in_amount']){
                $orderData[$i]['paid_in_amount'] = '';
            }
            $phpExcel->getActiveSheet(0)->setCellValue('F'.($i+2),$orderData[$i]['paid_in_amount']);
            $phpExcel->getActiveSheet(0)->setCellValue('G'.($i+2),$orderData[$i]['flowman']['name']);
            $phpExcel->getActiveSheet(0)->setCellValue('H'.($i+2),date('Y-m-d H:i;s',$orderData[$i]['appoint_time']));
            $phpExcel->getActiveSheet()->getStyle('A'.($i+2).':H'.($i+2))->getAlignment()->setVertical(\PHPExcel_Style_Alignment::VERTICAL_CENTER);
            $phpExcel->getActiveSheet()->getStyle('A'.($i+2).':H'.($i+2))->getBorders()->getAllBorders()->setBorderStyle(\PHPExcel_Style_Border::BORDER_THIN);
            $phpExcel->getActiveSheet()->getRowDimension($i+2)->setRowHeight(16);
        }
        // sheet命名
        $phpExcel->getActiveSheet()->setTitle('订单数据表');
        $phpExcel->setActiveSheetIndex(0);
        // excel头参数
        header('Content-Type: application/vnd.ms-excel'); // 生成xls/xlsx文件
        // header('Content-Type: text/csv'); // 生成csv文件
        header('Content-Disposition: attachment;filename="订单数据表('.date('Y-m-d H_i_s').').xls"'); // 后缀名:xls/xlsx/csv
        header('Cache-Control: max-age=0');
        $phpWriter = \PHPExcel_IOFactory::createWriter($phpExcel, 'Excel5'); // Excel5:xls; Excel2007:xlsx; CSV:csv;
        $phpWriter->save('php://output');
    }
    /**
     * (省下边)地区订单柱状图
     * @param  array   $where  条件
     * @return array
     */
    public function cityorder(){
        $regionId = input('region');
        if(!empty($regionId)){
            $regionWhere['pid']  = $regionId;
            $regionWhere['status']  = config("normal_status");
            $cityData = $this->getRegionData($regionWhere,array('id','name'),'',true);
            $region = $this->getRegionData(array('id'=>$regionId),array('id','name'),1);
            //查询所有数据
            $where = $this->ordertime('created_time',3);
            $where['province_id'] = $regionId;
            $where['state'] = config('normal_status');
            $orderDatas = Db::name('OrderGrave')->field('city_id,count(city_id)')->where($where)->group('city_id')->select();
            //dump($orderDatas);die;
            //统计数据
           /* $lastData = array();
            $olData = array();
            foreach($orderDatas as $val){
                foreach($cityData as $k=>$cval){
                    if($k == $val['city_id']){
                        $lastData[$k]['num'] += 1;
                        $lastData[$k]['id'] .= ','.$val['id'];
                        $lastData[$k]['key'] = $val['city_id'];
                    }
                }
            }
            //转换成有序数组
            foreach($lastData as $val){
                $olData[] = $val; 
            }*/
            //冒泡排序
            $dataCount = count($orderDatas);
            for($i=1;$i<$dataCount;$i++){
                for($j = 0;$j<$dataCount-$i;$j++){
                    if($orderDatas[$j]['count(city_id)']<$orderDatas[$j+1]['count(city_id)']){
                        $tmp = $orderDatas[$j];
                        $orderDatas[$j] = $orderDatas[$j+1];
                        $orderDatas[$j+1] = $tmp;
                    }
                }
            }
            dump($orderDatas);die;
            //组装数据
            $datas = array();
            foreach($olData as $val){
               $datas[] = array($cityData[$val['key']],$val['num']);
               $dataId[] = array('num'=>$val['num'],'id'=>$val['id']); 
            }
            $this->assign('data',$dataId);
            $this->assign('region',$region);
            $this->assign('datas',json_encode($datas));
            $this->display();
        }else{
            $this->error('跳转失败!');
        }
    }
    /**
     * 获取省市数据
     * @param  array   $where  条件
     * @param  array   $fields 字段
     * @param  int     $num    条数
     * @param  boolean $bool   获取方式
     * @return array
     */
    private function getRegionData($where=array(), $fields=array(), $num=null, $bool=false){
        $regionModel = Db::name('region');
        if(!$bool){
            if($num == 1){
                $region = $regionModel->where($where)->field($fields)->find();
            }
            if(empty($num)){
                $region = $regionModel->where($where)->field($fields)->select();
            }
        }else{
            $tmp = implode(',',$fields);
            $region = $regionModel->where($where)->column($tmp);
        }
        return $region;
    }
    

	
}