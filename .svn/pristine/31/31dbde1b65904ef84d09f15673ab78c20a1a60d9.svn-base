<?php
namespace web\extra\controller;
use think\Controller;
use think\Request;//请求类
use think\Session;//session类
use think\Cookie;//cookie类
use think\Db;
use common\iplocation\IpLocale;

class Base extends Controller 
{

    public function _initialize(){
        /*
         * 定位开始
         */
        //IP定位是否开启
        $iplocation = config('ip_location');
        //获取IP
        $ip = request()->ip();
        $cookie_regiod_id = cookie::get('ip_region_id');
        /**
         * 如果开启IP定位，并且cookie中没有地区ID那么进行IP定位
         * 如果没有开启IP定位，并且cookie中没有地区ID那么默认到北京
         */
        if($iplocation && empty($cookie_regiod_id)){
            $locale = New IpLocale();
            $areas = $locale->getProvinceCityId ($ip); // 根据ip获取登录地区
            if(empty($areas)){
                $areas['provid'] = 3;
                $areas['name'] = '北京';
            }
            Cookie::set('ip_region_id', $areas['provid']);
            Cookie::set('ip_region_name', $areas['name']);
        }else if(!$iplocation && empty($cookie_regiod_id)){
            Cookie::set('ip_region_id',3);
            Cookie::set('ip_region_name','北京');
        }
        /*
         * 定位结束
         */
        
        
        $path = request()->path();
        $regions = Db::name('region')->where(['status' => 1,'level' => 1])->field('id,name,pid,flag')->order('flag asc')->select();
        $province = [];
        $reg = [];
        if($regions){
            foreach ($regions as $val) {
                // 省份按拼音排序
                $province[$val['flag']][$val['id']] = $val['name'];
                $reg[$val['id']] = $val['name'];
            }
        }
        $this->assign([
            'reg' => $reg,
            'path' => $path,
            'allProvince' => $province,
        ]);
        
        //友情链接
        $this->getfriendlink();
    }

    /**
     *获取友情链接
     *@input void;
     *@return void;
     */
    protected function getfriendlink(){
        $provinceId = session('ip_region_id');//????
        $provinceId = 2;//????
        $where['status'] = config('normal_status');
        $link = Db::name('Friendlink')->field('name,url,province_id')->where($where)->order('sort DESC')->select(); 
        $friendlinks = array();
        foreach ($link as $value) {
            $province_id = explode(',',$value['province_id']);
            if(in_array($provinceId,$province_id)){
                $friendlinks[] = $value;
            }
        }
        $this->assign('friendlinks',$friendlinks);
    }
    /**
     *获取百科数据
     *@input $categoryId;//分类ID
     *@input $num;//信息数量
     *@return array;
     */
    public function article($categoryId,$num=6){
        $data = array();
        $num = (int)$num;
        $cateWhere['is_show'] = config('normal_status');
        $categorydata = Db::name('category')->field('id,pid')->where($cateWhere)->select();
        $category = $this->getcategoryId($categorydata,$categoryId);
        $category[] = $categoryId;
        $where['category_id'] = array('in',$category);
        $where['status'] = config('normal_status');
        $data = Db::name('News')->where($where)->field('id,title')->order('recommend DESC,sort DESC,published_time DESC')->limit($num)->select();
        return $data;
    }
    /**
     *获取该分类下子所有分类ID
     *@input $data;//分类数据
     *@input $pid;//分类ID
     *@return array;
     */
    private function getcategoryId($data,$pid){
        static $result = array();
        foreach($data as $val){
            if($val['pid'] == $pid){
                $result[] = $val['id'];
                $this->getcategoryId($data,$val['id']);
            }
        }
        return $result;
    }
    /**
     * 获取省市数据
     * @param  array   $where  条件
     * @param  array   $fields 字段
     * @param  int     $num    条数
     * @param  boolean $bool   获取方式
     * @return array
     */
    public function getRegionData($where=array(), $fields=array(), $num=null, $bool=false){
        $regionModel = Db::name('region');
        if(!$bool){
            if($num == 1){
                $region = $regionModel->where($where)->field($fields)->find();
            }
            if(empty($num)){
                $region = $regionModel->where($where)->field($fields)->select();
            }
        }else{
            $tmp = implode(',',$fields);
            $region = $regionModel->where($where)->column($tmp);
        }
        return $region;
    }

    
}